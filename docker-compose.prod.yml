version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    command: >
      /bin/sh -c "python manage.py migrate && daphne -b 0.0.0.0 -p 8000 config.asgi:application"
    volumes:
      - backend_static:/app/static
      - ./openvpn_configs:/app/openvpn_configs
    ports:
      - "8000:8000"
    env_file:
      - ./.env.prod
    depends_on:
      db:
        condition: service_healthy
    networks:
      - vpn_network

  bot:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bot
    command: >
      /bin/sh -c "python manage.py runbot"
    env_file:
      - ./.env.prod
    volumes:
      - ./openvpn_configs:/app/openvpn_configs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - vpn_network

  db:
    image: postgres:16.6-alpine
    container_name: postgres
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod
    networks:
      - vpn_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: ./nginx/prod
      dockerfile: Dockerfile
    ports:
      - "90:90"
    depends_on:
      - backend
    volumes:
      - backend_static:/backend/static:ro
    networks:
      - vpn_network

networks:
  vpn_network:

volumes:
  backend_static:
